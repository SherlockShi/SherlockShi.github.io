<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[Android Studio配置应用签名]]></title>
      <url>http://yoursite.com/2016/07/30/15_Android/1505_%E5%AE%89%E5%85%A8/Android%20Studio%E9%85%8D%E7%BD%AE%E5%BA%94%E7%94%A8%E7%AD%BE%E5%90%8D/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文主要参考：<br><a href="http://dxjia.cn/2016/03/04/config-signature-in-gradle-for-release-version/" target="_blank" rel="external">在gradle中为release版本配置签名</a></p>
</blockquote>
<p>任何一个Android APK 发布之前都会进行签名，没有签名的APK是无法在Android device上进行安装和使用的，而且对于发布到Google Play上的同一个应用，自始至终必须使用同一个签名文件，所以必须保存好签名文件。本文介绍如何在<code>build.gradle</code>中为release版本配置签名文件，这样在打包release版本时可以自动进行签名。</p>
<a id="more"></a>
<h1 id="明文配置"><a href="#明文配置" class="headerlink" title="明文配置"></a>明文配置</h1><p>一般来说，我们直接在Android Studio中配置签名文件，是使用明文配置的，如：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">android &#123;</span><br><span class="line"></span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            storeFile file(<span class="string">"/Users/xxx/release_key.jks"</span>)</span><br><span class="line">            storePassword <span class="string">"123456789"</span></span><br><span class="line">            keyAlias <span class="string">"release_key_alias"</span></span><br><span class="line">            keyPassword <span class="string">"987654321"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>注：此处的<code>storeFile</code>，如果是在Windows系统下，会是以下格式<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">storeFile file(<span class="string">"C\:\\Users\\xxx\\release_key.jks"</span>)</span><br></pre></td></tr></table></figure></p>
</blockquote>
<p>这样在打包release版本时就会自动签名了。</p>
<h1 id="隐藏密码配置"><a href="#隐藏密码配置" class="headerlink" title="隐藏密码配置"></a>隐藏密码配置</h1><p>如果你的代码不会开源，或者是公司项目，公司会保护的很好，那么直接用上面的方式就可以了。但如果是开源项目，那么上面的写法就不太可取了 ，因为这样直接配置会暴露密码啊。接下来介绍如果隐藏密码进行配置：</p>
<blockquote>
<p>利用<code>property</code>，将密码和签名文件路径信息保存在项目根目录的<code>local.properties</code>文件里，因为这个文件一般都在<code>.gitignore</code>里自动配置了，所以不会上传出去。  </p>
</blockquote>
<p>在根目录的<code>local.properties</code>文件中配置以下内容：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">keystore.path=<span class="regexp">/Users/</span>xxx/release_key.jks</span><br><span class="line">keystore.password=<span class="number">123456789</span></span><br><span class="line">keystore.alias=release_key_alias</span><br><span class="line">keystore.alias_password=<span class="number">987654321</span></span><br></pre></td></tr></table></figure></p>
<p>然后在你的app目录的<code>build.gradle</code>文件中增加以下代码：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// =====配置keystore start=====</span></span><br><span class="line"><span class="keyword">def</span> keystoreFilePath = <span class="string">''</span></span><br><span class="line"><span class="keyword">def</span> keystorePSW = <span class="string">''</span></span><br><span class="line"><span class="keyword">def</span> keystoreAlias = <span class="string">''</span></span><br><span class="line"><span class="keyword">def</span> keystoreAliasPSW = <span class="string">''</span></span><br><span class="line"><span class="comment">// default keystore file, PLZ config file path in local.properties</span></span><br><span class="line"><span class="keyword">def</span> keyfile = file(<span class="string">'s.keystore.temp'</span>)</span><br><span class="line"></span><br><span class="line">Properties properties = <span class="keyword">new</span> Properties()</span><br><span class="line"><span class="comment">// local.properties file in the root director</span></span><br><span class="line">properties.load(project.rootProject.file(<span class="string">'local.properties'</span>).newDataInputStream())</span><br><span class="line">keystoreFilePath = properties.getProperty(<span class="string">"keystore.path"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (keystoreFilePath) &#123;</span><br><span class="line">    keystorePSW = properties.getProperty(<span class="string">"keystore.password"</span>)</span><br><span class="line">    keystoreAlias = properties.getProperty(<span class="string">"keystore.alias"</span>)</span><br><span class="line">    keystoreAliasPSW = properties.getProperty(<span class="string">"keystore.alias_password"</span>)</span><br><span class="line">    keyfile = file(keystoreFilePath)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// =====配置keystore end=====</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            storeFile keyfile</span><br><span class="line">            storePassword keystorePSW</span><br><span class="line">            keyAlias keystoreAlias</span><br><span class="line">            keyPassword keystoreAliasPSW</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            <span class="keyword">if</span> (keyfile.exists()) &#123;</span><br><span class="line">                signingConfig signingConfigs.release</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样就达到了隐藏的目的。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android ScrollView无法match_parent的问题]]></title>
      <url>http://yoursite.com/2016/07/28/15_Android/1590_Others/Android%20ScrollView%E6%97%A0%E6%B3%95match_parent%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>Android ScrollView无法match_parent的问题</p>
<a id="more"></a>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>在ScrollView的属性里加上：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ScrollView</span></span><br><span class="line">    <span class="attr">...</span></span><br><span class="line">    <span class="attr">android:fillViewport</span>=<span class="string">"true"</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ScrollView</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio常见问题]]></title>
      <url>http://yoursite.com/2016/07/24/15_Android/1530_%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/AndroidStudio/Android%20Studio%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<blockquote>
<p>Android Studio使用建议：将SDK Manager里面的相关工具提前下载下来，并定期更新</p>
<ul>
<li>Tools目录：全部下载（包括SDK Tools、SDK Platform-tools、<strong>SDK Build-tools</strong>）  </li>
<li>各个版本的Android SDK：按需下载，一般下载SDK Platform、Documentation、APIs、Sources  </li>
<li>Extras目录：Android Support Repository、Android Support Library、Google Repository</li>
</ul>
</blockquote>
<a id="more"></a>
<h1 id="1-Gradle版本问题"><a href="#1-Gradle版本问题" class="headerlink" title="1. Gradle版本问题"></a>1. Gradle版本问题</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Error:</span>A problem occurred configuring root project <span class="string">'XylqPda'</span>.</span><br><span class="line">&gt; Could not resolve all dependencies <span class="keyword">for</span> configuration <span class="string">':classpath'</span>.</span><br><span class="line">   &gt; Could not resolve com.android.tools.<span class="string">build:</span><span class="string">gradle:</span><span class="number">2.0</span><span class="number">.0</span>.</span><br><span class="line">     Required <span class="string">by:</span></span><br><span class="line">         :<span class="string">XylqPda:</span>unspecified</span><br><span class="line">      &gt; Could not resolve com.android.tools.<span class="string">build:</span><span class="string">gradle:</span><span class="number">2.0</span><span class="number">.0</span>.</span><br><span class="line">         &gt; Could not get resource <span class="string">'https://repo1.maven.org/maven2/com/android/tools/build/gradle/2.0.0/gradle-2.0.0.pom'</span>.</span><br><span class="line">            &gt; Could not GET <span class="string">'https://repo1.maven.org/maven2/com/android/tools/build/gradle/2.0.0/gradle-2.0.0.pom'</span>.</span><br><span class="line">               &gt; peer not authenticated</span><br><span class="line">      &gt; Could not resolve com.android.tools.<span class="string">build:</span><span class="string">gradle:</span><span class="number">2.0</span><span class="number">.0</span>.</span><br><span class="line">         &gt; Could not get resource <span class="string">'https://jcenter.bintray.com/com/android/tools/build/gradle/2.0.0/gradle-2.0.0.pom'</span>.</span><br><span class="line">            &gt; Could not GET <span class="string">'https://jcenter.bintray.com/com/android/tools/build/gradle/2.0.0/gradle-2.0.0.pom'</span>.</span><br><span class="line">               &gt; peer not authenticated</span><br></pre></td></tr></table></figure>
<p>原因分析：<br>一般为Android Studio版本号和Gradle版本号不一致导致。</p>
<p>解决方法：<br>将项目根目录下的build.gradle中dependencies内的<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classpath <span class="string">'com.android.tools.build:gradle:2.1.2'</span></span><br></pre></td></tr></table></figure></p>
<p>版本号设为跟Android Studio版本号一致。</p>
<h1 id="2-下载Build-tools失败"><a href="#2-下载Build-tools失败" class="headerlink" title="2. 下载Build-tools失败"></a>2. 下载Build-tools失败</h1><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">Error:</span>failed to find Build Tools revision <span class="number">24.0</span><span class="number">.1</span></span><br><span class="line">Install Build Tools <span class="number">24.0</span><span class="number">.1</span> and sync project</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/barryhappy/article/details/44813951" target="_blank" rel="external">http://blog.csdn.net/barryhappy/article/details/44813951</a></p>
<h1 id="3-更新-Gradle-错误"><a href="#3-更新-Gradle-错误" class="headerlink" title="3. 更新 Gradle 错误"></a>3. 更新 Gradle 错误</h1><p>停止在Refreshing Gradle Project ,有时新建项目的时候报 Gradle Project Compile Error 等等相关的问题<br><a href="http://www.cnblogs.com/neozhu/p/3525404.html" target="_blank" rel="external">http://www.cnblogs.com/neozhu/p/3525404.html</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Gradle基础]]></title>
      <url>http://yoursite.com/2016/07/24/15_Android/1530_%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/AndroidStudio/Gradle%E5%9F%BA%E7%A1%80/</url>
      <content type="html"><![CDATA[<h1 id="一、-什么是Gradle？"><a href="#一、-什么是Gradle？" class="headerlink" title="一、 什么是Gradle？"></a>一、 什么是Gradle？</h1><p>Gradle是一种依赖管理工具，基于Groovy语言，面向Java应用为主，它抛弃了基于XML的各种繁琐配置，取而代之的是一种基于Groovy的领域专用（DSL）语言。</p>
<a id="more"></a>
<h1 id="二、安装Gradle"><a href="#二、安装Gradle" class="headerlink" title="二、安装Gradle"></a>二、安装Gradle</h1><p>在Android Studio中新建项目成功后会下载Gradle，貌似这个过程不翻墙也是可以下载，但是访问特别慢，建议翻墙下载。那么下载的Gradle到什么地方呢？</p>
<p>Mac上会默认下载到 <strong>/Users/&lt;用户名&gt;/.gradle/wrapper/dists</strong> 目录<br>Win平台会默认下载到 <strong>C:\Users\&lt;用户名&gt;\.gradle\wrapper\dists</strong> 目录</p>
<p>你会看到这个目录下有个 gradle-x.xx-all 的文件夹, 如果下载实在太慢，但是又不想翻墙的话，可以自己手动到<a href="https://gradle.org/gradle-download/" target="_blank" rel="external"><strong>Gradle官网</strong></a>、或者<a href="https://jcenter.bintray.com/com/android/tools/build/gradle/" target="_blank" rel="external"><strong>jcenter</strong></a>里下载对应的版本，然后将下载的.zip文件复制到上述的gradle-x.xx-all 文件夹下，不过还是建议让它直接下载的好。</p>
<h1 id="三、项目中的-Gradle-相关目录和文件"><a href="#三、项目中的-Gradle-相关目录和文件" class="headerlink" title="三、项目中的 Gradle 相关目录和文件"></a>三、项目中的 Gradle 相关目录和文件</h1><h3 id="1-app-build-gradle"><a href="#1-app-build-gradle" class="headerlink" title="1. app/build.gradle"></a>1. app/build.gradle</h3><p>这个文件是app文件夹下这个Module的gradle配置文件，也可以算是整个项目最主要的gradle配置文件</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 声明是Android程序</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.android.application'</span></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="comment">// 编译SDK的版本</span></span><br><span class="line">    compileSdkVersion <span class="number">21</span></span><br><span class="line">    <span class="comment">// build tools的版本</span></span><br><span class="line">    buildToolsVersion <span class="string">"21.1.1"</span></span><br><span class="line"></span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">    	<span class="comment">// 应用的包名</span></span><br><span class="line">        applicationId <span class="string">"me.storm.ninegag"</span></span><br><span class="line">        minSdkVersion <span class="number">14</span></span><br><span class="line">        targetSdkVersion <span class="number">21</span></span><br><span class="line">        versionCode <span class="number">1</span></span><br><span class="line">        versionName <span class="string">"1.0.0"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// java版本</span></span><br><span class="line">    compileOptions &#123;</span><br><span class="line">        sourceCompatibility JavaVersion.VERSION_1_7</span><br><span class="line">        targetCompatibility JavaVersion.VERSION_1_7</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        debug &#123;</span><br><span class="line">            <span class="comment">// debug模式</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        release &#123;</span><br><span class="line">            <span class="comment">// 是否进行混淆</span></span><br><span class="line">            minifyEnabled <span class="literal">false</span></span><br><span class="line">            <span class="comment">// 混淆文件的位置</span></span><br><span class="line">            proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.txt'</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移除lint检查的error</span></span><br><span class="line">    lintOptions &#123;</span><br><span class="line">      abortOnError <span class="literal">false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    <span class="comment">// 编译libs目录下的所有jar包</span></span><br><span class="line">    compile fileTree(<span class="string">dir:</span> <span class="string">'libs'</span>, <span class="string">include:</span> [<span class="string">'*.jar'</span>])</span><br><span class="line">    compile <span class="string">'com.android.support:support-v4:21.0.2'</span></span><br><span class="line">    compile <span class="string">'com.etsy.android.grid:library:1.0.5'</span></span><br><span class="line">    compile <span class="string">'com.alexvasilkov:foldable-layout:1.0.1'</span></span><br><span class="line">    <span class="comment">// 编译extras目录下的ShimmerAndroid模块</span></span><br><span class="line">    compile project(<span class="string">':extras:ShimmerAndroid'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-gradle"><a href="#2-gradle" class="headerlink" title="2. gradle/"></a>2. gradle/</h3><p>这个目录下有个 wrapper 文件夹，里面可以看到有两个文件，我们主要看下 gradle-wrapper.properties 这个文件的内容：<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Mon Dec 28 10:00:20 PST 2015</span><br><span class="line">distributionBase=GRADLE_USER_HOME</span><br><span class="line">distributionPath=wrapper/dists</span><br><span class="line">zipStoreBase=GRADLE_USER_HOME</span><br><span class="line">zipStorePath=wrapper/dists</span><br><span class="line">distributionUrl=https\://services.gradle.org/distributions/gradle-2.10-all.zip</span><br></pre></td></tr></table></figure></p>
<p>可以看到里面声明了gradle的目录与下载路径以及当前项目使用的gradle版本，这些默认的路径我们一般不会更改的，这个文件里指明的gradle版本不对也是很多导包不成功的原因之一。</p>
<h3 id="3-build-gradle"><a href="#3-build-gradle" class="headerlink" title="3. build.gradle"></a>3. build.gradle</h3><p>这个文件是整个项目的gradle基础配置文件<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Top-level build file where you can add configuration options common to all sub-projects/modules.</span></span><br><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath <span class="string">'com.android.tools.build:gradle:1.0.0'</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>内容主要包含了两个方面：</p>
<ul>
<li>一个是声明仓库的源，这里可以看到是指明的jcenter(), 之前版本则是mavenCentral(), jcenter可以理解成是一个新的中央远程仓库，兼容maven中心仓库，而且性能更优。</li>
<li>另一个是声明了android gradle plugin的版本，android studio 1.0正式版必须要求支持gradle plugin 1.0的版本。</li>
</ul>
<h3 id="4-settings-gradle"><a href="#4-settings-gradle" class="headerlink" title="4. settings.gradle"></a>4. settings.gradle</h3><p>这个文件是全局的项目配置文件，里面主要声明一些需要加入gradle的module<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">include <span class="string">':app'</span></span><br></pre></td></tr></table></figure></p>
<h1 id="四、Android-Studio中几个关于Gradle的不同概念"><a href="#四、Android-Studio中几个关于Gradle的不同概念" class="headerlink" title="四、Android Studio中几个关于Gradle的不同概念"></a>四、Android Studio中几个关于Gradle的不同概念</h1><h3 id="1-Gradle、Gradle-Plugin："><a href="#1-Gradle、Gradle-Plugin：" class="headerlink" title="1. Gradle、Gradle Plugin："></a>1. Gradle、Gradle Plugin：</h3><p>Gradle 是新一代的自动化构建工具，它是一个独立的项目，跟 AS、Android 无关，但是 Gradle 官方还是很看重 Android 开发的，Google 在推出 AS 的时候选中了 Gradle 作为构建工具，为了支持 Gradle 能在 AS 上使用，Google 做了个 AS 的插件叫 Android Gradle Plugin  ，所以我们能在 AS 上使用 Gradle 完全是因为这个插件的原因。在项目的根目录有个 build.gradle 文件，里面有这么一句代码：    </p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">classpath <span class="string">'com.android.tools.build:gradle:2.1.2'</span></span><br></pre></td></tr></table></figure>
<p>这个就是依赖 gradle 插件的代码，后面的版本号代表的是 android gradle plugin 的版本，而不是 Gradle 的版本，这个是 Google 定的，跟 Gradle 官方没关系。  </p>
<h3 id="2-Gradle-Wrapper"><a href="#2-Gradle-Wrapper" class="headerlink" title="2. Gradle Wrapper"></a>2. Gradle Wrapper</h3><p>字面意思是Gradle的包装器，主要是这样的应用场景：<br>假设我们本地有多个项目，一个是比较老的项目，还用着 Gradle 1.0 的版本，一个是比较新的项目用了 Gradle 2.0 的版本，但是你两个项目肯定都想要同时运行的，如果你只装了 Gradle 1.0 的话那肯定不行，所以为了解决这个问题，Google 推出了 Gradle Wrapper 的概念，就是他在你每个项目都配置了一个指定版本的 Gradle ，你可以理解为每个 Android 项目本地都有一个小型的 Gradle ，通过这个每个项目你可以支持用不同的 Gradle 版本来构建项目。</p>
<h1 id="五、推荐阅读"><a href="#五、推荐阅读" class="headerlink" title="五、推荐阅读"></a>五、推荐阅读</h1><p><a href="http://stormzhang.com/android/2016/07/02/gradle-for-android-beginners/" target="_blank" rel="external">给 Android 初学者的 Gradle 知识普及</a><br><a href="http://stormzhang.com/android/2016/07/15/android-gradle-config/" target="_blank" rel="external">Android 开发你需要了解的 Gradle 配置</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android代码混淆问题汇总]]></title>
      <url>http://yoursite.com/2016/07/21/15_Android/1505_%E5%AE%89%E5%85%A8/Android%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/</url>
      <content type="html"><![CDATA[<h1 id="1-The-same-input-jar-is-specified-twice"><a href="#1-The-same-input-jar-is-specified-twice" class="headerlink" title="1. The same input jar is specified twice"></a>1. The same input jar is specified twice</h1><p>Android studio打包中遇到了这样的问题：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning:Exception <span class="keyword">while</span> processing task java.io.IOException: The same input jar […….jar] is specified twice.</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>打开 proguard-rules.pro，<br>注释掉所有的-libraryjars行，或者直接删除，如：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-libraryjars xxxx.jar</span></span><br></pre></td></tr></table></figure></p>
<h3 id="原因分析"><a href="#原因分析" class="headerlink" title="原因分析"></a>原因分析</h3><p>build.gradle文件配置了<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile fileTree(<span class="string">include:</span> <span class="string">'*.jar'</span>, <span class="string">dir:</span> <span class="string">'libs'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>里面已经添加过jar包，sdk 通过 proguard 混淆代码时默认已经将 lib目录中的 jar 都已经添加到打包脚本中，所以不需要再次手动添加。  </p>
<h1 id="2-java-io-IOException-Please-correct-the-above-warnings-first"><a href="#2-java-io-IOException-Please-correct-the-above-warnings-first" class="headerlink" title="2. java.io.IOException: Please correct the above warnings first"></a>2. java.io.IOException: Please correct the above warnings first</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Warning:com.baidu.platform.comapi.map.f: can<span class="string">'t find referenced method '</span><span class="built_in">float</span> sqrt(<span class="built_in">float</span>)<span class="string">' in library class android.util.FloatMath</span><br><span class="line">Warning:okio.DeflaterSink: can'</span>t find referenced class org.codehaus.mojo.animal_sniffer.IgnoreJRERequirement</span><br><span class="line">Warning:okio.Okio: can<span class="string">'t find referenced class java.nio.file.Files</span><br><span class="line">Warning:okio.Okio: can'</span>t find referenced class java.nio.file.Path</span><br><span class="line">Warning:okio.Okio: can<span class="string">'t find referenced class java.nio.file.OpenOption</span><br><span class="line"></span><br><span class="line">Warning:Exception while processing task java.io.IOException: Please correct the above warnings first.</span><br><span class="line">:app:transformClassesAndResourcesWithProguardForRelease FAILED</span><br><span class="line">Error:Execution failed for task '</span>:app:transformClassesAndResourcesWithProguardForRelease<span class="string">'.</span><br><span class="line">&gt; java.io.IOException: Please correct the above warnings first.</span></span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[HttpURLConnection用法]]></title>
      <url>http://yoursite.com/2016/07/19/15_Android/1525_%E7%BD%91%E7%BB%9C/HttpURLConnection%E7%94%A8%E6%B3%95/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原文链接：<br><a href="http://www.blogjava.net/supercrsky/articles/247449.html" target="_blank" rel="external">http://www.blogjava.net/supercrsky/articles/247449.html</a><br><a href="http://blog.csdn.net/woxueliuyun/article/details/43267365" target="_blank" rel="external">http://blog.csdn.net/woxueliuyun/article/details/43267365</a></p>
</blockquote>
<p>任何网络连接都需要经过socket才能连接，HttpURLConnection不需要设置socket，所以，HttpURLConnection并不是底层的连接，而是在底层连接上的一个请求。这就是为什么HttpURLConneciton只是一个抽象类，自身不能被实例化的原因。HttpURLConnection只能通过URL.openConnection()方法创建具体的实例。</p>
<a id="more"></a>
<p>虽然底层的网络连接可以被多个HttpURLConnection实例共享，但每一个HttpURLConnection实例只能发送一个请求。请求结束之后，应该调用HttpURLConnection实例的InputStream或OutputStream的close()方法以释放请求的网络资源，不过这种方式对于持久化连接没用。对于持久化连接，得用disconnect()方法关闭底层连接的socket。</p>
<h3 id="创建HttpURLConnection"><a href="#创建HttpURLConnection" class="headerlink" title="创建HttpURLConnection"></a>创建HttpURLConnection</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://localhost:8080/xxx.do"</span>);    </span><br><span class="line"></span><br><span class="line">URLConnection rulConnection = url.openConnection();</span><br><span class="line"><span class="comment">// 此处的urlConnection对象实际上是根据URL的    </span></span><br><span class="line"><span class="comment">// 请求协议(此处是http)生成的URLConnection类    </span></span><br><span class="line"><span class="comment">// 的子类HttpURLConnection,故此处最好将其转化    </span></span><br><span class="line"><span class="comment">// 为HttpURLConnection类型的对象,以便用到    </span></span><br><span class="line"><span class="comment">// HttpURLConnection更多的API.如下:    </span></span><br><span class="line"></span><br><span class="line">HttpURLConnection httpUrlConnection = (HttpURLConnection) rulConnection;</span><br></pre></td></tr></table></figure>
<h3 id="设置HttpURLConnection参数"><a href="#设置HttpURLConnection参数" class="headerlink" title="设置HttpURLConnection参数"></a>设置HttpURLConnection参数</h3><blockquote>
<p>若为Get请求，不用设置下述参数，只需要最后一步的connect()即可  </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设定请求的方法为"POST"，默认是GET    </span></span><br><span class="line">httpUrlConnection.setRequestMethod(<span class="string">"POST"</span>);    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置是否向httpUrlConnection输出，因为这个是post请求，参数要放在    </span></span><br><span class="line"><span class="comment">// http正文内，因此需要设为true, 默认情况下是false;    </span></span><br><span class="line">httpUrlConnection.setDoOutput(<span class="keyword">true</span>);    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置是否从httpUrlConnection读入，默认情况下是true;    </span></span><br><span class="line">httpUrlConnection.setDoInput(<span class="keyword">true</span>);    </span><br><span class="line"></span><br><span class="line"><span class="comment">// Post 请求不能使用缓存    </span></span><br><span class="line">httpUrlConnection.setUseCaches(<span class="keyword">false</span>);    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 设定传送的内容类型是可序列化的java对象    </span></span><br><span class="line"><span class="comment">// (如果不设此项,在传送序列化对象时,当WEB服务默认的不是这种类型时可能抛java.io.EOFException)    </span></span><br><span class="line">httpUrlConnection.setRequestProperty(<span class="string">"Content-type"</span>, <span class="string">"application/x-java-serialized-object"</span>);    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接，从上述url.openConnection()至此的配置必须要在connect之前完成，    </span></span><br><span class="line">httpUrlConnection.connect();</span><br></pre></td></tr></table></figure>
<h3 id="URLConnection建立连接"><a href="#URLConnection建立连接" class="headerlink" title="URLConnection建立连接"></a>URLConnection建立连接</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 此处getOutputStream会隐含的进行connect(即：如同调用上面的connect()方法，    </span></span><br><span class="line"><span class="comment">// 所以在开发中不调用上述的connect()也可以)。    </span></span><br><span class="line">OutputStream outStrm = httpUrlConnection.getOutputStream();</span><br><span class="line"><span class="comment">//getInputStream()也是同理。</span></span><br></pre></td></tr></table></figure>
<h3 id="HttpURLConnection发送请求"><a href="#HttpURLConnection发送请求" class="headerlink" title="HttpURLConnection发送请求"></a>HttpURLConnection发送请求</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 现在通过输出流对象构建对象输出流对象，以实现输出可序列化的对象。    </span></span><br><span class="line">ObjectOutputStream objOutputStrm = <span class="keyword">new</span> ObjectOutputStream(outStrm);    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 向对象输出流写出数据，这些数据将存到内存缓冲区中    </span></span><br><span class="line">objOutputStrm.writeObject(<span class="keyword">new</span> String(<span class="string">"我是测试数据"</span>));    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 刷新对象输出流，将任何字节都写入潜在的流中（些处为ObjectOutputStream）    </span></span><br><span class="line">objOutputStm.flush();    </span><br><span class="line"></span><br><span class="line"><span class="comment">// 关闭流对象。此时，不能再向对象输出流写入任何数据，先前写入的数据存在于内存缓冲区中,    </span></span><br><span class="line"><span class="comment">// 在调用下边的getInputStream()函数时才把准备好的http请求正式发送到服务器    </span></span><br><span class="line">objOutputStm.close();</span><br></pre></td></tr></table></figure>
<h3 id="HttpURLConneciton获取响应"><a href="#HttpURLConneciton获取响应" class="headerlink" title="HttpURLConneciton获取响应"></a>HttpURLConneciton获取响应</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 调用HttpURLConnection连接对象的getInputStream()函数</span></span><br><span class="line">InputStream inStrm = httpConn.getInputStream();</span><br></pre></td></tr></table></figure>
<h3 id="设置POST参数"><a href="#设置POST参数" class="headerlink" title="设置POST参数"></a>设置POST参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">OutputStream os = httpConn.getOutputStream();    </span><br><span class="line">String param = <span class="keyword">new</span> String();    </span><br><span class="line">param = <span class="string">"CorpID="</span> + CorpID +    </span><br><span class="line">       <span class="string">"&amp;LoginName="</span> + LoginName+    </span><br><span class="line">       <span class="string">"&amp;send_no="</span> + phoneNumber +    </span><br><span class="line">       <span class="string">"&amp;msg="</span> + java.net.URLEncoder.encode(msg,<span class="string">"GBK"</span>); ;    </span><br><span class="line">os.write(param.getBytes());</span><br></pre></td></tr></table></figure>
<h5 id="超时设置，防止网络异常的情况下，可能会导致程序僵死而不继续往下执行"><a href="#超时设置，防止网络异常的情况下，可能会导致程序僵死而不继续往下执行" class="headerlink" title="超时设置，防止网络异常的情况下，可能会导致程序僵死而不继续往下执行"></a>超时设置，防止网络异常的情况下，可能会导致程序僵死而不继续往下执行</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">System.setProperty(<span class="string">"sun.net.client.defaultConnectTimeout"</span>, <span class="string">"30000"</span>);</span><br><span class="line">System.setProperty(<span class="string">"sun.net.client.defaultReadTimeout"</span>, <span class="string">"30000"</span>);</span><br></pre></td></tr></table></figure>
<p>其中：<br>sun.net.client.defaultConnectTimeout：连接主机的超时时间（单位：毫秒）<br>sun.net.client.defaultReadTimeout：从主机读取数据的超时时间（单位：毫秒）</p>
<p>JDK 1.5以前的版本，只能通过设置这两个系统属性来控制网络超时。在1.5中，还可以使用HttpURLConnection的父类URLConnection的以下两个方法：  </p>
<p>setConnectTimeout：设置连接主机超时（单位：毫秒）<br>setReadTimeout：设置从主机读取数据超时（单位：毫秒）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HttpURLConnection urlCon = (HttpURLConnection)url.openConnection();  </span><br><span class="line">urlCon.setConnectTimeout(<span class="number">30000</span>);  </span><br><span class="line">urlCon.setReadTimeout(<span class="number">30000</span>);</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio入门教程]]></title>
      <url>http://yoursite.com/2016/07/13/15_Android/1530_%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/AndroidStudio/Android%20Studio%E5%85%A5%E9%97%A8%E6%95%99%E7%A8%8B/</url>
      <content type="html"><![CDATA[<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><p>在Android Studio出现之前，开发Android应用主要是使用Eclipse ADT，也就是说，虽然那时候Android系统已经安装在9亿台设备上，但是没有一个专门的开发环境供Android开发者来开发Android应用。直到2013年的Google I/O大会，Google发布了Android Studio 0.1版本，我们才有了像iOS开发者的XCode一样的官方IDE。</p>
<a id="more"></a>
<p>2013年5月发布早期预览版本，版本号为0.1。2014年6月发布0.8版本，至此进入beta阶段。第一个稳定版本1.0于2014年12月8日发布，之后还有好多版本，比较稳定有的1.5正式版，2.0正式版，以及现在最新的2.1版本。</p>
<p>早期版本的Android Studio非常的难用，内存消耗非常严重，各种Bug，只有后面的1.5版本以后的版本才比较好，现在的2.0版本已经很好了。</p>
<h1 id="2-下载、安装"><a href="#2-下载、安装" class="headerlink" title="2. 下载、安装"></a>2. 下载、安装</h1><p><a href="https://developer.android.com/studio/index.html" target="_blank" rel="external">Android开发者官方网站(需翻墙)</a><br><a href="http://tools.android.com/download/studio" target="_blank" rel="external">Android开发工具网站(需翻墙)</a><br><a href="http://www.android-studio.org/" target="_blank" rel="external">中文社区</a>  </p>
<p><a href="https://developer.android.com/studio/index.html" target="_blank" rel="external"><strong>配置建议：</strong></a><br>内存8G+<br>JDK8</p>
<h1 id="3-配置"><a href="#3-配置" class="headerlink" title="3. 配置"></a>3. 配置</h1><ul>
<li><a href="http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="external">JDK</a>  </li>
<li><p>环境变量：JAVA_HOME、PATH、CLASSPATH  </p>
<ul>
<li><a href="http://www.cnblogs.com/smyhvae/p/3788534.html" target="_blank" rel="external">Windows系统设置方法</a>  </li>
<li><a href="http://stormzhang.com/android/2014/06/27/manage-java-on-macosx/" target="_blank" rel="external">Mac系统设置方法</a>  </li>
</ul>
</li>
<li><p>测试是否安装成功：<br>java，javac，java -version</p>
</li>
</ul>
<h1 id="4-项目介绍"><a href="#4-项目介绍" class="headerlink" title="4. 项目介绍"></a>4. 项目介绍</h1><p>在新建一个项目之前，这里先普及Android Studio和eclipse在某些概念不同的地方。</p>
<p>Android Studio 中，有一些概念是和 eclipse 不同的，从 eclipse 迁移至 Android Studio 会有很多上手不顺的情况发生，当然在明确了概念的不同之后，还是容易可以切换过来。</p>
<table>
<thead>
<tr>
<th style="text-align:center">对比</th>
<th style="text-align:center">eclipse</th>
<th>Android Studio</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">工作区</td>
<td style="text-align:center">workspace</td>
<td>project</td>
</tr>
<tr>
<td style="text-align:center">项目</td>
<td style="text-align:center">project</td>
<td>module</td>
</tr>
<tr>
<td style="text-align:center">引用</td>
<td style="text-align:center">preference</td>
<td>module dependency</td>
</tr>
</tbody>
</table>
<p>简单的来说，Android Stduio把一个项目比喻成一个工程的一个个模块，外部的依赖也是一个个模块，这样一个项目的结构就很清晰明了。<br>当然也有一个缺点，就是一个窗口只能打开一个project，不能像eclipse那样一次一个窗口打开多个项目。</p>
<h3 id="4-1-新建项目"><a href="#4-1-新建项目" class="headerlink" title="4.1 新建项目"></a>4.1 新建项目</h3><p><strong>两个方式：</strong>  </p>
<ul>
<li><p>Android Studio欢迎界面时：<br>  <code>start a new Android Studio project</code></p>
</li>
<li><p>Android Studio已有打开的项目时：<br>  <code>File</code> -&gt; <code>New</code> -&gt; <code>New Project...</code></p>
</li>
</ul>
<h3 id="4-2-模拟器"><a href="#4-2-模拟器" class="headerlink" title="4.2 模拟器"></a>4.2 模拟器</h3><p><strong>＝＝＝＝＝＝＝＝建议使用真机＝＝＝＝＝＝＝＝</strong></p>
<h5 id="自带的"><a href="#自带的" class="headerlink" title="自带的"></a>自带的</h5><h5 id="Genymotion"><a href="#Genymotion" class="headerlink" title="Genymotion"></a><a href="https://www.genymotion.com/" target="_blank" rel="external">Genymotion</a></h5><h3 id="4-3-目录结构"><a href="#4-3-目录结构" class="headerlink" title="4.3 目录结构"></a>4.3 目录结构</h3><p>目录展现模式：Project、Android  </p>
<ul>
<li>app/  <ul>
<li>libs/： 右击jar包，Add as library</li>
<li>main<ul>
<li>src/</li>
<li>res/</li>
<li>AndroidManifest.xml</li>
</ul>
</li>
<li>proguard-rules.pro：混淆文件</li>
</ul>
</li>
</ul>
<blockquote>
<p>这里还有一些关于Gradle的配置文件还没有介绍，统一在下一节进行介绍。</p>
</blockquote>
<h1 id="5-Gradle介绍"><a href="#5-Gradle介绍" class="headerlink" title="5. Gradle介绍"></a>5. Gradle介绍</h1><p>详见<a href="http://sherlockshi.github.io/2016/07/24/15_Android/1530_%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/AndroidStudio/Gradle%E5%9F%BA%E7%A1%80/" target="_blank" rel="external">Gradle基础</a></p>
<h1 id="6-插件"><a href="#6-插件" class="headerlink" title="6. 插件"></a>6. 插件</h1><ul>
<li>gson format</li>
<li>android-butterknife-zelezny</li>
<li><a href="https://github.com/takahirom/android-postfix-plugin" target="_blank" rel="external">Android Postfix Completion</a></li>
<li><a href="https://github.com/Skykai521/ECTranslation" target="_blank" rel="external">ECTranslation</a></li>
<li>.gitignore</li>
</ul>
<p><a href="http://mobdevgroup.com/tools/android" target="_blank" rel="external">Android开发工具</a></p>
<h1 id="7-常用快捷键"><a href="#7-常用快捷键" class="headerlink" title="7. 常用快捷键"></a>7. 常用快捷键</h1><p><code>Preferences</code> -&gt; <code>Keymap</code><br><code>Help</code> -&gt; <code>Default Keymap Reference</code></p>
<h3 id="常用"><a href="#常用" class="headerlink" title="常用"></a>常用</h3><table>
<thead>
<tr>
<th>Action</th>
<th>Mac OSX</th>
<th>Win/Linux</th>
</tr>
</thead>
<tbody>
<tr>
<td>Search everywhere</td>
<td>Double Shift</td>
<td>Double Shift</td>
</tr>
<tr>
<td>注释代码(//)</td>
<td>Cmd + /</td>
<td>Ctrl + /</td>
</tr>
<tr>
<td>注释代码(/**/)</td>
<td>Cmd + Option + /</td>
<td>Ctrl + Shift + /</td>
</tr>
<tr>
<td>格式化代码</td>
<td>Cmd + Option + L</td>
<td>Ctrl + Alt + L</td>
</tr>
<tr>
<td>清除无效包引用</td>
<td>Option + Control + O</td>
<td>Alt + Ctrl + O</td>
</tr>
<tr>
<td>查找</td>
<td>Cmd + F</td>
<td>Ctrl + F</td>
</tr>
<tr>
<td>查找+替换</td>
<td>Cmd + R</td>
<td>Ctrl + R</td>
</tr>
<tr>
<td>上下移动代码</td>
<td>Option + Shift + Up/Down</td>
<td>Alt + Shift + Up/Down</td>
</tr>
<tr>
<td>删除行</td>
<td>Cmd + Delete</td>
<td>Ctrl + Y</td>
</tr>
<tr>
<td>复制行</td>
<td>Cmd + D</td>
<td>Ctrl + D</td>
</tr>
<tr>
<td>重命名</td>
<td>Shift+F6</td>
<td>Shift+F6</td>
</tr>
<tr>
<td>重构</td>
<td>Cmd + Option + M</td>
<td>Shift+F6</td>
</tr>
<tr>
<td>扩大缩小选中范围</td>
<td>Option + Up/Down</td>
<td>Ctrl + W/Ctrl + Shift + W</td>
</tr>
<tr>
<td>快捷生成结构体</td>
<td>Cmd + Option + T</td>
<td>Ctrl + Alt + T</td>
</tr>
<tr>
<td>快捷覆写方法</td>
<td>Cmd + O</td>
<td>Ctrl + O</td>
</tr>
<tr>
<td>快捷定位到行首/尾</td>
<td>Cmd + Left/Right</td>
<td>Ctrl + Left/Right</td>
</tr>
<tr>
<td>折叠展开代码块</td>
<td>Cmd + Plus,Minus</td>
<td>Ctrl + Plus/Minus</td>
</tr>
<tr>
<td>折叠展开全部代码块</td>
<td>Cmd + Shift + Plus,Minus</td>
<td>Ctrl + Shift + Plus,Minus</td>
</tr>
<tr>
<td>文件方法结构</td>
<td>Cmd + F12</td>
<td>Ctrl + F12</td>
</tr>
<tr>
<td>查找调用的位置</td>
<td>Ctrl + Option + H</td>
<td>Ctrl + Alt + H</td>
</tr>
<tr>
<td>大小写转换</td>
<td>Cmd + Shift + U</td>
<td>Ctrl + Shift + U</td>
</tr>
</tbody>
</table>
<h3 id="自动导包"><a href="#自动导包" class="headerlink" title="自动导包"></a>自动导包</h3><p>我们只有每次引用一些类的时候必须要导包，而Android Studio可以通过设置自动导包，简直太实用了.</p>
<p>到 <code>Preferences</code> -&gt; <code>Editor</code> -&gt; <code>General</code> -&gt; <code>Auto Import</code> -&gt; <code>Java</code> 把以下选项勾上就OK了<br><img src="http://7xlpfl.com1.z0.glb.clouddn.com/Snip20160724_1.png" alt=""></p>
<h1 id="8-常见问题"><a href="#8-常见问题" class="headerlink" title="8. 常见问题"></a>8. 常见问题</h1><p>详见<a href="http://sherlockshi.github.io/2016/07/24/15_Android/1530_%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/AndroidStudio/Android%20Studio%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/" target="_blank" rel="external">Android Studio常见问题</a></p>
<h1 id="9-学习资料"><a href="#9-学习资料" class="headerlink" title="9. 学习资料"></a>9. 学习资料</h1><p>stormzhang的<a href="http://stormzhang.com/devtools/2015/06/17/android-studio-all/" target="_blank" rel="external">Android Studio详细教程汇总</a><br><a href="https://dongchuan.gitbooks.io/gradle-user-guide-/content/tutorials/" target="_blank" rel="external">Gradle中文教程</a><br><a href="http://ask.android-studio.org/?/explore/category-video" target="_blank" rel="external">Android Studio视频教程</a><br><a href="http://ask.android-studio.org/?/explore/category-gradle" target="_blank" rel="external">Gradle教程</a></p>
<h1 id="10-翻墙软件"><a href="#10-翻墙软件" class="headerlink" title="10. 翻墙软件"></a>10. 翻墙软件</h1><h3 id="免费："><a href="#免费：" class="headerlink" title="免费："></a>免费：</h3><p><a href="https://github.com/XX-net/XX-Net" target="_blank" rel="external">XX-Net</a><br><a href="https://github.com/getlantern/forum" target="_blank" rel="external">蓝灯</a></p>
<h3 id="付费："><a href="#付费：" class="headerlink" title="付费："></a>付费：</h3><p><a href="https://shadowsocks.com/" target="_blank" rel="external">Shadowsocks</a><br><a href="https://www.ytpub.com/" target="_blank" rel="external">云梯VPN</a><br>…</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Andrdoid代码混淆]]></title>
      <url>http://yoursite.com/2016/07/01/15_Android/1505_%E5%AE%89%E5%85%A8/Andrdoid%E4%BB%A3%E7%A0%81%E6%B7%B7%E6%B7%86/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文主要参考<a href="http://www.jianshu.com/p/f3455ecaa56e" target="_blank" rel="external">5分钟搞定android混淆</a></p>
</blockquote>
<h1 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h1><a id="more"></a>
<h1 id="2-上模板"><a href="#2-上模板" class="headerlink" title="2. 上模板"></a>2. 上模板</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-------------------------------------------定制化区域----------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------1.实体类、自定义控件-----------------------</span></span><br><span class="line">-keep class com.sherlockshi.core.model.entity.** &#123; *; &#125; <span class="comment">#实体类不参与混淆</span></span><br><span class="line">-keep class com.sherlockshi.core.ui.custom.** &#123; *; &#125; <span class="comment">#自定义控件不参与混淆</span></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------2.第三方包-------------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------3.与js互相调用的类------------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------4.反射相关的类和方法-----------------------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------基本不用动区域--------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------基本指令区----------------------------------</span></span><br><span class="line">-optimizationpasses 5</span><br><span class="line">-dontskipnonpubliclibraryclassmembers</span><br><span class="line">-printmapping proguardMapping.txt</span><br><span class="line">-optimizations !code/simplification/cast,!field/*,!class/merging/*</span><br><span class="line">-keepattributes *Annotation*,InnerClasses</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------默认保留区---------------------------------</span></span><br><span class="line">-keep public class * extends android.app.Activity</span><br><span class="line">-keep public class * extends android.app.Application</span><br><span class="line">-keep public class * extends android.app.Service</span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">-keep public class * extends android.content.ContentProvider</span><br><span class="line">-keep public class * extends android.app.backup.BackupAgentHelper</span><br><span class="line">-keep public class * extends android.preference.Preference</span><br><span class="line">-keep public class * extends android.view.View</span><br><span class="line">-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line">-keep class android.support.** &#123;*;&#125;</span><br><span class="line"></span><br><span class="line">-keep public class * extends android.view.View&#123;</span><br><span class="line">    *** get*();</span><br><span class="line">    void <span class="built_in">set</span>*(***);</span><br><span class="line">    public &lt;init&gt;(android.content.Context);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">    static final long serialVersionUID;</span><br><span class="line">    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">    private void <span class="built_in">read</span>Object(java.io.ObjectInputStream);</span><br><span class="line">    java.lang.Object writeReplace();</span><br><span class="line">    java.lang.Object <span class="built_in">read</span>Resolve();</span><br><span class="line">&#125;</span><br><span class="line">-keep class **.R$* &#123;</span><br><span class="line"> *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * &#123;</span><br><span class="line">    void *(**On*Event);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------webview------------------------------------</span></span><br><span class="line">-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;</span><br><span class="line">   public *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);</span><br><span class="line">    public boolean *(android.webkit.WebView, java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.webView, jav.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>
<h1 id="3-分析"><a href="#3-分析" class="headerlink" title="3. 分析"></a>3. 分析</h1><h3 id="3-1-实体类、自定义控件"><a href="#3-1-实体类、自定义控件" class="headerlink" title="3.1 实体类、自定义控件"></a>3.1 实体类、自定义控件</h3><p>实体类由于涉及到与服务端的交互，各种gson的交互如此等等，是要保留的，自定义控件也是一样。将你项目中实体类都拎出来，用以下语法进行保留。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-keep class 你的实体类所在的包.** &#123; *; &#125;</span><br><span class="line">-keep class 你的自定义控件所在的包.** &#123; *; &#125;</span><br></pre></td></tr></table></figure>
<p>如我的项目下类User的完整路径为：com.demo.login.bean.User, 那我的混淆如下<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---------------------------------1.实体类、自定义控件-----------------------</span></span><br><span class="line"></span><br><span class="line">-keep class com.demo.login.bean.** &#123; *; &#125; <span class="comment">#实体类不参与混淆</span></span><br><span class="line">-keep class com.demo.android.view.** &#123; *; &#125; <span class="comment">#自定义控件不参与混淆</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure></p>
<p>当然你的实体类、自定义控件肯定不止这一个，请用上边的方式一一添加，如果你的实体类、自定义控件都在一个包下，那你就幸福了。</p>
<h3 id="3-2-第三方包"><a href="#3-2-第三方包" class="headerlink" title="3.2 第三方包"></a>3.2 第三方包</h3><p>打开你app下的build.gradle文件，查看你用了哪些第三方的包。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    compile <span class="string">'com.github.bumptech.glide:glide:3.7.0'</span></span><br><span class="line">    compile <span class="string">'org.greenrobot:eventbus:3.0.0'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>我这里用了glide，eventbus。我去他们的官网把已经写好的混淆copy下来。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---------------------------------2.第三方包-------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#eventBus</span></span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepclassmembers class ** &#123;</span><br><span class="line">    @org.greenrobot.eventbus.Subscribe &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep enum org.greenrobot.eventbus.ThreadMode &#123; *; &#125;</span><br><span class="line">-keepclassmembers class * extends org.greenrobot.eventbus.util.ThrowableFailureEvent &#123;</span><br><span class="line">    &lt;init&gt;(java.lang.Throwable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#glide</span></span><br><span class="line">-keep public class * implements com.bumptech.glide.module.GlideModule</span><br><span class="line">-keep public enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** &#123;</span><br><span class="line">  **[] <span class="variable">$VALUES</span>;</span><br><span class="line">  public *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>
<p>一般官网都是有混淆的，没有的话就google，也没有的话自己按照上面的写法自己写，还不会的话。。。。。只能换个包。。。。。如果你是直接包含的jar包的话，你这样写</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#---------------------------------2.第三方包-------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#log4j</span></span><br><span class="line">-libraryjars <span class="built_in">log</span>4j-1.2.17.jar</span><br><span class="line">-dontwarn org.apache.log4j.**</span><br><span class="line">-keep class  org.apache.log4j.** &#123; *;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>
<p>大致意思就是不混淆，不报warn。如果gradle报错的话，可以考虑注释掉-libraryjars log4j-1.2.17.jar这句。</p>
<h3 id="3-3-与js互相调用的类"><a href="#3-3-与js互相调用的类" class="headerlink" title="3.3 与js互相调用的类"></a>3.3 与js互相调用的类</h3><p>工程中没有直接跳过，一般你可以这样写</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keep class 你的类所在的包.** &#123; *; &#125;</span><br></pre></td></tr></table></figure>
<p>如果是内部类的话，你可以这样<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keepclasseswithmembers class 你的类所在的包.父类$子类 &#123; &lt;methods&gt;; &#125;</span><br></pre></td></tr></table></figure></p>
<p>例如<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-keepclasseswithmembers class com.demo.login.bean.ui.MainActivity<span class="variable">$JSInterface</span> &#123;</span><br><span class="line">      &lt;methods&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h3 id="3-4-反射相关的类和方法"><a href="#3-4-反射相关的类和方法" class="headerlink" title="3.4 反射相关的类和方法"></a>3.4 反射相关的类和方法</h3><p>工程中没有直接跳过，类的话直接这样<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keep class 你的类所在的包.** &#123; *; &#125;</span><br></pre></td></tr></table></figure></p>
<h1 id="4-深入了解"><a href="#4-深入了解" class="headerlink" title="4. 深入了解"></a>4. 深入了解</h1><p>先逐条介绍下基本指令区指令的含义</p>
<p>代码混淆的压缩比例，值在0-7之间：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-optimizationpasses 5</span><br></pre></td></tr></table></figure></p>
<p>混淆后类名都为小写：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-dontusemixedcaseclassnames</span><br></pre></td></tr></table></figure></p>
<p>指定不去忽略非公共的库的类：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-dontskipnonpubliclibraryclasses</span><br></pre></td></tr></table></figure></p>
<p>指定不去忽略非公共的库的类的成员：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-dontskipnonpubliclibraryclassmembers</span><br></pre></td></tr></table></figure></p>
<p>不做预校验的操作：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-dontpreverify</span><br></pre></td></tr></table></figure></p>
<p>生成原类名和混淆后的类名的映射文件：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-verbose</span><br><span class="line">-printmapping proguardMapping.txt</span><br></pre></td></tr></table></figure></p>
<p>指定混淆是采用的算法：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-optimizations !code/simplification/cast,!field/*,!class/merging/*</span><br></pre></td></tr></table></figure></p>
<p>不混淆Annotation：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keepattributes *Annotation*,InnerClasses</span><br></pre></td></tr></table></figure></p>
<p>不混淆泛型：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keepattributes Signature</span><br></pre></td></tr></table></figure></p>
<p>抛出异常时保留代码行号：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keepattributes SourceFile,LineNumberTable</span><br></pre></td></tr></table></figure></p>
<p>基本指令区基本介绍完了，说下2条用的最多的指令：</p>
<ol>
<li><p>保留类名不变，也就是类名不混淆，而类中的成员名不保证。当然也可以是继承XXX类的所有类名不混淆，具体代码不贴了，重在理解。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keep class XXXX</span><br></pre></td></tr></table></figure>
</li>
<li><p>保留类名和成员名。当然也可以是类中特定方法，代码不贴了，理由同上。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-keepclasseswithmembers class XXXX</span><br></pre></td></tr></table></figure>
</li>
</ol>
<h1 id="5-附：完整的混淆"><a href="#5-附：完整的混淆" class="headerlink" title="5. 附：完整的混淆"></a>5. 附：完整的混淆</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#-------------------------------------------定制化区域----------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------1.实体类---------------------------------</span></span><br><span class="line"></span><br><span class="line">-keep class com.demo.login.bean.** &#123; *; &#125;</span><br><span class="line">-keep class com.demo.main.bean.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------2.第三方包-------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#eventBus</span></span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepclassmembers class ** &#123;</span><br><span class="line">    @org.greenrobot.eventbus.Subscribe &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep enum org.greenrobot.eventbus.ThreadMode &#123; *; &#125;</span><br><span class="line">-keepclassmembers class * extends org.greenrobot.eventbus.util.ThrowableFailureEvent &#123;</span><br><span class="line">    &lt;init&gt;(java.lang.Throwable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#glide</span></span><br><span class="line">-keep public class * implements com.bumptech.glide.module.GlideModule</span><br><span class="line">-keep public enum com.bumptech.glide.load.resource.bitmap.ImageHeaderParser$** &#123;</span><br><span class="line">  **[] <span class="variable">$VALUES</span>;</span><br><span class="line">  public *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#log4j</span></span><br><span class="line">-libraryjars <span class="built_in">log</span>4j-1.2.17.jar</span><br><span class="line">-dontwarn org.apache.log4j.**</span><br><span class="line">-keep class  org.apache.log4j.** &#123; *;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------3.与js互相调用的类------------------------</span></span><br><span class="line"></span><br><span class="line">-keepclasseswithmembers class com.demo.login.bean.ui.MainActivity<span class="variable">$JSInterface</span> &#123;</span><br><span class="line">      &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------4.反射相关的类和方法-----------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#TODO 我的工程里没有。。。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------基本不用动区域--------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------基本指令区----------------------------------</span></span><br><span class="line">-optimizationpasses 5</span><br><span class="line">-dontusemixedcaseclassnames</span><br><span class="line">-dontskipnonpubliclibraryclasses</span><br><span class="line">-dontskipnonpubliclibraryclassmembers</span><br><span class="line">-dontpreverify</span><br><span class="line">-verbose</span><br><span class="line">-printmapping proguardMapping.txt</span><br><span class="line">-optimizations !code/simplification/cast,!field/*,!class/merging/*</span><br><span class="line">-keepattributes *Annotation*,InnerClasses</span><br><span class="line">-keepattributes Signature</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------默认保留区---------------------------------</span></span><br><span class="line">-keep public class * extends android.app.Activity</span><br><span class="line">-keep public class * extends android.app.Application</span><br><span class="line">-keep public class * extends android.app.Service</span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">-keep public class * extends android.content.ContentProvider</span><br><span class="line">-keep public class * extends android.app.backup.BackupAgentHelper</span><br><span class="line">-keep public class * extends android.preference.Preference</span><br><span class="line">-keep public class * extends android.view.View</span><br><span class="line">-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line">-keep class android.support.** &#123;*;&#125;</span><br><span class="line"></span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.app.Activity&#123;</span><br><span class="line">    public void *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keep public class * extends android.view.View&#123;</span><br><span class="line">    *** get*();</span><br><span class="line">    void <span class="built_in">set</span>*(***);</span><br><span class="line">    public &lt;init&gt;(android.content.Context);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembers class * &#123;</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line">-keep class * implements android.os.Parcelable &#123;</span><br><span class="line">  public static final android.os.Parcelable<span class="variable">$Creator</span> *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">    static final long serialVersionUID;</span><br><span class="line">    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">    private void <span class="built_in">read</span>Object(java.io.ObjectInputStream);</span><br><span class="line">    java.lang.Object writeReplace();</span><br><span class="line">    java.lang.Object <span class="built_in">read</span>Resolve();</span><br><span class="line">&#125;</span><br><span class="line">-keep class **.R$* &#123;</span><br><span class="line"> *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * &#123;</span><br><span class="line">    void *(**On*Event);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#---------------------------------webview------------------------------------</span></span><br><span class="line">-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;</span><br><span class="line">   public *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);</span><br><span class="line">    public boolean *(android.webkit.WebView, java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.webView, jav.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#----------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">#---------------------------------------------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>
<h1 id="6-后言"><a href="#6-后言" class="headerlink" title="6. 后言"></a>6. 后言</h1><p>将app下的build.gradle中minifyEnabled设置为true打个包试试吧</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">release &#123;</span><br><span class="line">       minifyEnabled <span class="literal">true</span></span><br><span class="line">       proguardFiles getDefaultProguardFile(<span class="string">'proguard-android.txt'</span>), <span class="string">'proguard-rules.pro'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android里Button只显示大写字母的问题]]></title>
      <url>http://yoursite.com/2016/06/27/15_Android/1590_Others/Android%E9%87%8CButton%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E7%9A%84%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h3 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h3><p>在XML布局文件里面直接给Button设置英文text时，会出现text内容全部变成大写，如设置text为Take(Small)Picture，但实际显示为TAKE(SMALL)PICTURE</p>
<a id="more"></a>
<p><img src="http://7xlpfl.com1.z0.glb.clouddn.com/Android%E9%87%8CButton%E5%8F%AA%E6%98%BE%E7%A4%BA%E5%A4%A7%E5%86%99%E5%AD%97%E6%AF%8D%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="Alt text"></p>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><p>在Button的属性里加上：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span><br><span class="line">    <span class="attr">...</span></span><br><span class="line">    <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span> /&gt;</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android官方相机教程：简单的相机应用和自定义相机]]></title>
      <url>http://yoursite.com/2016/06/27/15_Android/1520_%E7%9B%B8%E6%9C%BA/Android%E5%AE%98%E6%96%B9%E7%9B%B8%E6%9C%BA%E6%95%99%E7%A8%8B%EF%BC%9A%E7%AE%80%E5%8D%95%E7%9A%84%E7%9B%B8%E6%9C%BA%E5%BA%94%E7%94%A8%E5%92%8C%E8%87%AA%E5%AE%9A%E4%B9%89%E7%9B%B8%E6%9C%BA/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文基于<a href="https://developer.android.com/training/camera/index.html" target="_blank" rel="external">Android相机官方教程</a>及<a href="http://wiki.jikexueyuan.com/project/android-training-geek/camera-index.html" target="_blank" rel="external">极客学院Wiki</a>整理</p>
</blockquote>
<a id="more"></a>
<h1 id="1-轻松拍摄照片"><a href="#1-轻松拍摄照片" class="headerlink" title="1. 轻松拍摄照片"></a>1. 轻松拍摄照片</h1><p>这节课将讲解如何使用已有的相机应用拍摄照片。</p>
<h2 id="1-1-请求使用相机权限"><a href="#1-1-请求使用相机权限" class="headerlink" title="1.1 请求使用相机权限"></a>1.1 请求使用相机权限</h2><p>如果拍照是应用的必要功能，那么应该令它在Google Play中仅对有相机的设备可见。为了让用户知道我们的应用需要依赖相机，在Manifest清单文件中添加<uses-feature>标签:</uses-feature></p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span> &gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-feature</span> <span class="attr">android:name</span>=<span class="string">"android.hardware.camera"</span></span><br><span class="line">                  <span class="attr">android:required</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>如果我们的应用使用相机，但相机并不是应用的正常运行所必不可少的组件，可以将android:required设置为”false”。这样的话，Google Play 也会允许没有相机的设备下载该应用。当然我们有必要在使用相机之前通过调用hasSystemFeature(PackageManager.FEATURE_CAMERA)方法来检查设备上是否有相机。如果没有，我们应该禁用和相机相关的功能！</p>
<h2 id="1-2-使用相机应用程序进行拍照"><a href="#1-2-使用相机应用程序进行拍照" class="headerlink" title="1.2 使用相机应用程序进行拍照"></a>1.2 使用相机应用程序进行拍照</h2><p>利用一个描述了执行目的Intent对象，Android可以将某些执行任务委托给其他应用。整个过程包含三部分： Intent 本身，一个函数调用来启动外部的 Activity，当焦点返回到我们的Activity时，处理返回图像数据的代码。</p>
<p>下面的函数通过发送一个Intent来捕获照片：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_IMAGE_CAPTURE = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dispatchTakePictureIntent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (getPackageManager().hasSystemFeature(PackageManager.FEATURE_CAMERA)) &#123;</span><br><span class="line">      Intent takePictureIntent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">      <span class="keyword">if</span> (takePictureIntent.resolveActivity(getPackageManager()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">          startActivityForResult(takePictureIntent, REQUEST_IMAGE_CAPTURE);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意在调用startActivityForResult()方法之前，先调用resolveActivity()，这个方法会返回能处理该Intent的第一个Activity（译注：即检查有没有能处理这个Intent的Activity）。执行这个检查非常重要，因为如果在调用startActivityForResult()时，没有应用能处理你的Intent，应用将会崩溃。所以只要返回结果不为null，使用该Intent就是安全的。</p>
<h2 id="1-3-获取缩略图"><a href="#1-3-获取缩略图" class="headerlink" title="1.3 获取缩略图"></a>1.3 获取缩略图</h2><p>拍摄照片并不是应用的最终目的，我们还想要从相机应用那里取回拍摄的照片，并对它执行某些操作。</p>
<p>Android的相机应用会把拍好的照片编码为缩小的Bitmap，使用extra value的方式添加到返回的Intent当中，并传送给onActivityResult()，对应的Key为”data”。下面的代码展示的是如何获取这一图片并显示在ImageView上。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (requestCode == REQUEST_IMAGE_CAPTURE &amp;&amp; resultCode == RESULT_OK) &#123;</span><br><span class="line">        Bundle extras = data.getExtras();</span><br><span class="line">        Bitmap imageBitmap = (Bitmap) extras.get(<span class="string">"data"</span>);</span><br><span class="line">        mImageView.setImageBitmap(imageBitmap);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>Note: 这张从”data”中取出的缩略图适用于作为图标，但其他作用会比较有限。而处理一张全尺寸图片需要做更多的工作。</p>
</blockquote>
<h2 id="1-4-保存全尺寸照片"><a href="#1-4-保存全尺寸照片" class="headerlink" title="1.4 保存全尺寸照片"></a>1.4 保存全尺寸照片</h2><p>如果我们提供了一个File对象给Android的相机程序，它会保存这张全尺寸照片到给定的路径下。另外，我们必须提供存储图片所需要的含有后缀名形式的文件名。</p>
<p>一般而言，用户使用设备相机所拍摄的任何照片都应该被存放在设备的公共外部存储中，这样它们就能被所有的应用访问。将DIRECTORY_PICTURES作为参数，传递给getExternalStoragePublicDirectory()方法，可以返回适用于存储公共图片的目录。由于该方法提供的目录被所有应用共享，因此对该目录进行读写操作分别需要READ_EXTERNAL_STORAGE和WRITE_EXTERNAL_STORAGE权限。另外，因为写权限隐含了读权限，所以如果需要外部存储的写权限，那么仅仅需要请求一项权限就可以了：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>然而，如果希望照片对我们的应用而言是私有的，那么可以使用getExternalFilesDir()提供的目录。在Android 4.3及以下版本的系统中，写这个目录需要WRITE_EXTERNAL_STORAGE权限。从Android 4.4开始，该目录将无法被其他应用访问，所以该权限就不再需要了，你可以通过添加maxSdkVersion属性，声明只在低版本的Android设备上请求这个权限。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">...</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span></span><br><span class="line">                     <span class="attr">android:maxSdkVersion</span>=<span class="string">"18"</span> /&gt;</span></span><br><span class="line">    ...</span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>所有存储在getExternalFilesDir()提供的目录中的文件会在用户卸载你的app后被删除。</p>
</blockquote>
<p>一旦选定了存储文件的目录，我们还需要设计一个保证文件名不会冲突的命名规则。当然我们还可以将路径存储在一个成员变量里以备在将来使用。下面的例子使用日期时间戳作为新照片的文件名：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">String mCurrentPhotoPath;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> File <span class="title">createImageFile</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    <span class="comment">// Create an image file name</span></span><br><span class="line">    String timeStamp = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd_HHmmss"</span>).format(<span class="keyword">new</span> Date());</span><br><span class="line">    String imageFileName = <span class="string">"JPEG_"</span> + timeStamp + <span class="string">"_"</span>;</span><br><span class="line">    File storageDir = Environment.getExternalStoragePublicDirectory(</span><br><span class="line">            Environment.DIRECTORY_PICTURES);</span><br><span class="line">    File image = File.createTempFile(</span><br><span class="line">        imageFileName,  <span class="comment">/* prefix */</span></span><br><span class="line">        <span class="string">".jpg"</span>,         <span class="comment">/* suffix */</span></span><br><span class="line">        storageDir      <span class="comment">/* directory */</span></span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Save a file: path for use with ACTION_VIEW intents</span></span><br><span class="line">    mCurrentPhotoPath = <span class="string">"file:"</span> + image.getAbsolutePath();</span><br><span class="line">    <span class="keyword">return</span> image;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>有了上面的方法，我们就可以给新照片创建文件对象了，现在我们可以像这样创建并触发一个Intent：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> REQUEST_TAKE_PHOTO = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dispatchTakePictureIntent</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Intent takePictureIntent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</span><br><span class="line">    <span class="comment">// Ensure that there's a camera activity to handle the intent</span></span><br><span class="line">    <span class="keyword">if</span> (takePictureIntent.resolveActivity(getPackageManager()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="comment">// Create the File where the photo should go</span></span><br><span class="line">        File photoFile = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            photoFile = createImageFile();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</span><br><span class="line">            <span class="comment">// Error occurred while creating the File</span></span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// Continue only if the File was successfully created</span></span><br><span class="line">        <span class="keyword">if</span> (photoFile != <span class="keyword">null</span>) &#123;</span><br><span class="line">            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT,</span><br><span class="line">                    Uri.fromFile(photoFile));</span><br><span class="line">            startActivityForResult(takePictureIntent, REQUEST_TAKE_PHOTO);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="1-5-将照片添加到相册中"><a href="#1-5-将照片添加到相册中" class="headerlink" title="1.5 将照片添加到相册中"></a>1.5 将照片添加到相册中</h2><p>由于我们通过Intent创建了一张照片，因此图片的存储位置我们是知道的。对其他人来说，也许查看我们的照片最简单的方式是通过系统的Media Provider。</p>
<blockquote>
<p>Note: 如果将图片存储在getExternalFilesDir()提供的目录中，Media Scanner将无法访问到我们的文件，因为它们隶属于应用的私有数据。</p>
</blockquote>
<p>下面的例子演示了如何触发系统的Media Scanner，将我们的照片添加到Media Provider的数据库中，这样就可以使得Android相册程序与其他程序能够读取到这些照片。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">galleryAddPic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Intent mediaScanIntent = <span class="keyword">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE);</span><br><span class="line">    File f = <span class="keyword">new</span> File(mCurrentPhotoPath);</span><br><span class="line">    Uri contentUri = Uri.fromFile(f);</span><br><span class="line">    mediaScanIntent.setData(contentUri);</span><br><span class="line">    <span class="keyword">this</span>.sendBroadcast(mediaScanIntent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="1-6-解码一幅缩放图片"><a href="#1-6-解码一幅缩放图片" class="headerlink" title="1.6 解码一幅缩放图片"></a>1.6 解码一幅缩放图片</h2><p>在有限的内存下，管理许多全尺寸的图片会很棘手。如果发现应用在展示了少量图片后消耗了所有内存，我们可以通过缩放图片到目标视图尺寸，之后再载入到内存中的方法，来显著降低内存的使用，下面的例子演示了这个技术：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setPic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Get the dimensions of the View</span></span><br><span class="line">    <span class="keyword">int</span> targetW = mImageView.getWidth();</span><br><span class="line">    <span class="keyword">int</span> targetH = mImageView.getHeight();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Get the dimensions of the bitmap</span></span><br><span class="line">    BitmapFactory.Options bmOptions = <span class="keyword">new</span> BitmapFactory.Options();</span><br><span class="line">    bmOptions.inJustDecodeBounds = <span class="keyword">true</span>;</span><br><span class="line">    BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);</span><br><span class="line">    <span class="keyword">int</span> photoW = bmOptions.outWidth;</span><br><span class="line">    <span class="keyword">int</span> photoH = bmOptions.outHeight;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Decode the image file into a Bitmap sized to fill the View</span></span><br><span class="line">    bmOptions.inJustDecodeBounds = <span class="keyword">false</span>;</span><br><span class="line">    bmOptions.inSampleSize = calculateInSampleSize(bmOptions, targetW, targetH);</span><br><span class="line">    bmOptions.inPurgeable = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    Bitmap bitmap = BitmapFactory.decodeFile(mCurrentPhotoPath, bmOptions);</span><br><span class="line">    mImageView.setImageBitmap(bitmap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">calculateInSampleSize</span><span class="params">(BitmapFactory.Options options,</span><br><span class="line">                                            <span class="keyword">int</span> reqWidth, <span class="keyword">int</span> reqHeight)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Raw height and width of image</span></span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> height = options.outHeight;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> width = options.outWidth;</span><br><span class="line">    <span class="keyword">int</span> inSampleSize = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (height &gt; reqHeight || width &gt; reqWidth) &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Calculate ratios of height and width to requested height and</span></span><br><span class="line">        <span class="comment">// width</span></span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> heightRatio = Math.round((<span class="keyword">float</span>) height</span><br><span class="line">                / (<span class="keyword">float</span>) reqHeight);</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> widthRatio = Math.round((<span class="keyword">float</span>) width / (<span class="keyword">float</span>) reqWidth);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// Choose the smallest ratio as inSampleSize value, this will</span></span><br><span class="line">        <span class="comment">// guarantee</span></span><br><span class="line">        <span class="comment">// a final image with both dimensions larger than or equal to the</span></span><br><span class="line">        <span class="comment">// requested height and width.</span></span><br><span class="line">        inSampleSize = heightRatio &lt; widthRatio ? heightRatio : widthRatio;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> inSampleSize;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用Hexo搭建个人博客过程的各种问题]]></title>
      <url>http://yoursite.com/2016/06/23/30_%E5%8D%9A%E5%AE%A2/3005_Hexo/%E4%BD%BF%E7%94%A8Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E8%BF%87%E7%A8%8B%E7%9A%84%E5%90%84%E7%A7%8D%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="1-问题1："><a href="#1-问题1：" class="headerlink" title="1. 问题1："></a>1. 问题1：</h1><p>Q: hexo server后访问浏览器 <a href="http://0.0.0.0:4000/" target="_blank" rel="external">http://0.0.0.0:4000/</a> 出现 cannot get：</p>
<a id="more"></a>
<p>A: 已经解决好问题了，依次执行如下命令就行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-ejs --save</span><br><span class="line">npm install hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-renderer-marked --save</span><br><span class="line"></span><br><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>
<h1 id="2-问题2："><a href="#2-问题2：" class="headerlink" title="2. 问题2："></a>2. 问题2：</h1><p>Q: npm install时报错：</p>
<p><img src="http://7xlpfl.com1.z0.glb.clouddn.com/%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2_%E9%97%AE%E9%A2%982.png" alt="Alt text"></p>
<p>A:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo npm install</span><br></pre></td></tr></table></figure>
<h1 id="3-问题3："><a href="#3-问题3：" class="headerlink" title="3. 问题3："></a>3. 问题3：</h1><p>Q: 社会化评论多说duoshuo_shortname在哪看:</p>
<p>A: 到多说官网创建站点(站点为xxx.github.io)，之后就会得到short_name</p>
<h1 id="4-问题4："><a href="#4-问题4：" class="headerlink" title="4. 问题4："></a>4. 问题4：</h1><p>Q: 如何设置分类和标签？</p>
<p>A: 在文章的开始位置进行如下设置：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 使用Hexo搭建个人博客过程的各种问题</span><br><span class="line">categories:</span><br><span class="line">  - Hexo</span><br><span class="line">tags:</span><br><span class="line">  - Hexo</span><br><span class="line">  - 问题</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<h1 id="5-问题5："><a href="#5-问题5：" class="headerlink" title="5. 问题5："></a>5. 问题5：</h1><p>Q: 首页的文章目录，怎么设置显示部分摘要和read more?</p>
<p>A:在文章中加一行如下的标记，在这个标记之前的就是摘要</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure>
<h1 id="6-问题6："><a href="#6-问题6：" class="headerlink" title="6. 问题6："></a>6. 问题6：</h1><p>Q：运行<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>命令后报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure></p>
<p>A：执行以下命令，安装hexo-deployer-git自动部署发布工具：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Markdown语言常用语法]]></title>
      <url>http://yoursite.com/2016/04/28/10_Markdown/Markdown%E8%AF%AD%E8%A8%80%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      <content type="html"><![CDATA[<blockquote>
<p>本文主要记录Markdown语言的常用语法，做为备忘，本文内容主要参考：<br><a href="https://segmentfault.com/markdown" target="_blank" rel="external">https://segmentfault.com/markdown</a><br><a id="more"></a></p>
</blockquote>
<h1 id="1-代码"><a href="#1-代码" class="headerlink" title="1. 代码"></a>1. 代码</h1><h3 id="1-1-行内代码"><a href="#1-1-行内代码" class="headerlink" title="1.1 行内代码"></a>1.1 行内代码</h3><h5 id="1-用法："><a href="#1-用法：" class="headerlink" title="1) 用法："></a>1) 用法：</h5><p>把代码用反引号(`)(键盘上Esc键下面的键)包起，如：  </p>
<pre><code>`toString()`方法
</code></pre><h5 id="2-效果："><a href="#2-效果：" class="headerlink" title="2) 效果："></a>2) 效果：</h5><p><code>toString()</code>方法  </p>
<h3 id="1-2-代码块"><a href="#1-2-代码块" class="headerlink" title="1.2 代码块"></a>1.2 代码块</h3><h5 id="1-用法1："><a href="#1-用法1：" class="headerlink" title="1) 用法1："></a>1) 用法1：</h5><p>用 3个` 包裹一段代码，并指定一种语言，如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```java  </span><br><span class="line">public class BookViewHolder extends RecyclerView.ViewHolder &#123;  </span><br><span class="line">    public TextView tvBook;  </span><br><span class="line">&#125;  </span><br><span class="line">```</span><br></pre></td></tr></table></figure></p>
<h5 id="2-用法2："><a href="#2-用法2：" class="headerlink" title="2) 用法2："></a>2) 用法2：</h5><p>也可以在代码块的每一行使用 4 空格缩进，实现相同的的效果，此处不再举例，可自己尝试。</p>
<h5 id="3-效果："><a href="#3-效果：" class="headerlink" title="3) 效果："></a>3) 效果：</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> TextView tvBook;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>支持的语言：<code>actionscript</code>, <code>apache</code>, <code>bash</code>, <code>clojure</code>, <code>cmake</code>, <code>coffeescript</code>, <code>cpp</code>, <code>cs</code>, <code>css</code>, <code>d</code>, <code>delphi</code>, <code>django</code>, <code>erlang</code>, <code>go</code>, <code>haskell</code>, <code>html</code>, <code>http</code>, <code>ini</code>, <code>java</code>, <code>javascript</code>, <code>json</code>, <code>lisp</code>, <code>lua</code>, <code>markdown</code>, <code>matlab</code>, <code>nginx</code>, <code>objectivec</code>, <code>perl</code>, <code>php</code>, <code>python</code>, <code>r</code>, <code>ruby</code>, <code>scala</code>, <code>smalltalk</code>, <code>sql</code>, <code>tex</code>, <code>vbscript</code>, <code>xml</code></p>
<h1 id="2-标题"><a href="#2-标题" class="headerlink" title="2. 标题"></a>2. 标题</h1><h5 id="1-用法：-1"><a href="#1-用法：-1" class="headerlink" title="1) 用法："></a>1) 用法：</h5><p>使用1-6个#号连接内容，如：  </p>
<pre><code># 一级标题

## 二级标题

### 三级标题
</code></pre><h5 id="2-效果：-1"><a href="#2-效果：-1" class="headerlink" title="2) 效果："></a>2) 效果：</h5><h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h1 id="3-粗体与斜体"><a href="#3-粗体与斜体" class="headerlink" title="3. 粗体与斜体"></a>3. 粗体与斜体</h1><h5 id="1-用法：-2"><a href="#1-用法：-2" class="headerlink" title="1) 用法："></a>1) 用法：</h5><p>正常字前后不加*号，1个<em>为斜体，2个</em>为粗体，3个*为粗斜体，如：  </p>
<pre><code>这是正常的字

*这是斜体的字*

**这是加粗的字**

***这是粗斜体的字***
</code></pre><h5 id="2-效果：-2"><a href="#2-效果：-2" class="headerlink" title="2) 效果："></a>2) 效果：</h5><p>这是正常的字</p>
<p><em>这是斜体的字</em></p>
<p><strong>这是加粗的字</strong></p>
<p><strong><em>这是粗斜体的字</em></strong></p>
<h1 id="4-链接"><a href="#4-链接" class="headerlink" title="4. 链接"></a>4. 链接</h1><h3 id="4-1-常用链接方法"><a href="#4-1-常用链接方法" class="headerlink" title="4.1 常用链接方法"></a>4.1 常用链接方法</h3><h5 id="1-用法：-3"><a href="#1-用法：-3" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>文字链接： [百度](http://www.baidu.com)  
网址链接： &lt;http://www.baidu.com&gt;
</code></pre><h5 id="2-效果：-3"><a href="#2-效果：-3" class="headerlink" title="2) 效果："></a>2) 效果：</h5><p>文字链接： <a href="http://www.baidu.com" target="_blank" rel="external">百度</a><br>网址链接： <a href="http://www.baidu.com" target="_blank" rel="external">http://www.baidu.com</a></p>
<h3 id="4-2-高级链接技巧"><a href="#4-2-高级链接技巧" class="headerlink" title="4.2 高级链接技巧"></a>4.2 高级链接技巧</h3><h5 id="1-用法：-4"><a href="#1-用法：-4" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>这个链接用 1 作为网址变量 [Google][1].
这个链接用 yahoo 作为网址变量 [Yahoo!][yahoo].

然后在文档的结尾为变量赋值（网址）:
  [1]: http://www.google.com/
  [yahoo]: http://www.yahoo.com/
</code></pre><h5 id="2-效果：-4"><a href="#2-效果：-4" class="headerlink" title="2) 效果："></a>2) 效果：</h5><p>这个链接用 1 作为网址变量 <a href="http://www.google.com/" target="_blank" rel="external">Google</a>.<br>这个链接用 yahoo 作为网址变量 <a href="http://www.yahoo.com/" target="_blank" rel="external">Yahoo!</a>.  </p>
<h1 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h1><h3 id="5-1-普通无序列表"><a href="#5-1-普通无序列表" class="headerlink" title="5.1 普通无序列表"></a>5.1 普通无序列表</h3><h5 id="1-用法：-5"><a href="#1-用法：-5" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>- 列表文本前使用 [减号+空格]
+ 列表文本前使用 [加号+空格]
* 列表文本前使用 [星号+空格]
</code></pre><h5 id="2-效果：-5"><a href="#2-效果：-5" class="headerlink" title="2) 效果："></a>2) 效果：</h5><ul>
<li>列表文本前使用 [减号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [加号+空格]</li>
</ul>
<ul>
<li>列表文本前使用 [星号+空格]</li>
</ul>
<h3 id="5-2-普通有序列表"><a href="#5-2-普通有序列表" class="headerlink" title="5.2 普通有序列表"></a>5.2 普通有序列表</h3><h5 id="1-用法：-6"><a href="#1-用法：-6" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>1. 列表前使用 [数字+空格]
2. 我们会自动帮你添加数字
7. 不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3
</code></pre><h5 id="2-效果：-6"><a href="#2-效果：-6" class="headerlink" title="2) 效果："></a>2) 效果：</h5><ol>
<li>列表前使用 [数字+空格]</li>
<li>我们会自动帮你添加数字</li>
<li>不用担心数字不对，显示的时候我们会自动把这行的 7 纠正为 3</li>
</ol>
<h3 id="5-3-列表嵌套"><a href="#5-3-列表嵌套" class="headerlink" title="5.3 列表嵌套"></a>5.3 列表嵌套</h3><h5 id="1-用法：-7"><a href="#1-用法：-7" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>1. 列出所有元素：
    - 无序列表元素 A
        1. 元素 A 的有序子列表
    - 前面加四个空格
2. 列表里的多段换行：
    前面必须加四个空格，
    这样换行，整体的格式不会乱
3. 列表里引用：

    &gt; 前面空一行
    &gt; 仍然需要在 &gt;  前面加四个空格

4. 列表里代码段：
</code></pre><h5 id="2-效果：-7"><a href="#2-效果：-7" class="headerlink" title="2) 效果："></a>2) 效果：</h5><ol>
<li>列出所有元素：<ul>
<li>无序列表元素 A<ol>
<li>元素 A 的有序子列表</li>
</ol>
</li>
<li>前面加四个空格</li>
</ul>
</li>
<li>列表里的多段换行：<br> 前面必须加四个空格，<br> 这样换行，整体的格式不会乱  </li>
<li><p>列表里引用：</p>
<blockquote>
<p>前面空一行<br>仍然需要在 &gt;  前面加四个空格</p>
</blockquote>
</li>
<li><p>列表里代码段：<br>待补充。</p>
</li>
</ol>
<h1 id="6-引用"><a href="#6-引用" class="headerlink" title="6. 引用"></a>6. 引用</h1><h3 id="6-1-普通引用"><a href="#6-1-普通引用" class="headerlink" title="6.1 普通引用"></a>6.1 普通引用</h3><h5 id="1-用法：-8"><a href="#1-用法：-8" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>&gt; 引用文本前使用 [大于号+空格]  
&gt; 折行可以不加，新起一行都要加上哦
</code></pre><h5 id="2-效果：-8"><a href="#2-效果：-8" class="headerlink" title="2) 效果："></a>2) 效果：</h5><blockquote>
<p>引用文本前使用 [大于号+空格]<br>折行可以不加，新起一行都要加上哦</p>
</blockquote>
<h3 id="6-2-引用里嵌套引用"><a href="#6-2-引用里嵌套引用" class="headerlink" title="6.2 引用里嵌套引用"></a>6.2 引用里嵌套引用</h3><h5 id="1-用法：-9"><a href="#1-用法：-9" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>&gt; 最外层引用
&gt; &gt; 多一个 &gt; 嵌套一层引用
&gt; &gt; &gt; 可以嵌套很多层
</code></pre><h5 id="2-效果：-9"><a href="#2-效果：-9" class="headerlink" title="2) 效果："></a>2) 效果：</h5><blockquote>
<p>最外层引用</p>
<blockquote>
<p>多一个 &gt; 嵌套一层引用</p>
<blockquote>
<p>可以嵌套很多层</p>
</blockquote>
</blockquote>
</blockquote>
<h3 id="6-3-引用里嵌套列表"><a href="#6-3-引用里嵌套列表" class="headerlink" title="6.3 引用里嵌套列表"></a>6.3 引用里嵌套列表</h3><h5 id="1-用法：-10"><a href="#1-用法：-10" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>&gt; - 这是引用里嵌套的一个列表
&gt; - 还可以有子列表
&gt;     * 子列表需要从 - 之后延后四个空格开始
</code></pre><h5 id="2-效果：-10"><a href="#2-效果：-10" class="headerlink" title="2) 效果："></a>2) 效果：</h5><blockquote>
<ul>
<li>这是引用里嵌套的一个列表</li>
<li>还可以有子列表<ul>
<li>子列表需要从 - 之后延后四个空格开始</li>
</ul>
</li>
</ul>
</blockquote>
<h3 id="6-4-引用里嵌套代码块"><a href="#6-4-引用里嵌套代码块" class="headerlink" title="6.4 引用里嵌套代码块"></a>6.4 引用里嵌套代码块</h3><h5 id="1-用法：-11"><a href="#1-用法：-11" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>&gt;     同样的，在前面加四个空格形成代码块
</code></pre><h5 id="2-效果：-11"><a href="#2-效果：-11" class="headerlink" title="2) 效果："></a>2) 效果：</h5><blockquote>
<pre><code>同样的，在前面加四个空格形成代码块
</code></pre></blockquote>
<h1 id="7-图片"><a href="#7-图片" class="headerlink" title="7. 图片"></a>7. 图片</h1><p>跟链接的方法区别在于前面加了个感叹号 !，这样是不是觉得好记多了呢？</p>
<h5 id="1-用法：-12"><a href="#1-用法：-12" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>![图片名称](http://图片网址)，如：
![奇犽](http://7xlpfl.com1.z0.glb.clouddn.com/%E5%A5%87%E7%8A%BD3.jpg)
</code></pre><h5 id="2-效果：-12"><a href="#2-效果：-12" class="headerlink" title="2) 效果："></a>2) 效果：</h5><p><img src="http://7xlpfl.com1.z0.glb.clouddn.com/%E5%A5%87%E7%8A%BD3.jpg" alt="奇犽"></p>
<p>当然，你也可以像网址那样对图片网址使用变量：  </p>
<pre><code>这个链接用 1 作为网址变量 [Google][1].  
然后在文档的结尾位变量赋值（网址）

 [1]: http://www.google.com/logo.png
</code></pre><p>也可以使用 HTML 的图片语法来自定义图片的宽高大小：</p>
<pre><code>&lt;img src=&quot;htt://example.com/sample.png&quot; width=&quot;400&quot; height=&quot;100&quot;&gt;
</code></pre><h1 id="8-换行"><a href="#8-换行" class="headerlink" title="8. 换行"></a>8. 换行</h1><p>如果另起一行，只需在当前行结尾加 2 个空格</p>
<pre><code>在当前行的结尾加 2 个空格  
这行就会新起一行
</code></pre><p>如果是要起一个新段落，只需要空出一行即可。</p>
<h1 id="9-分隔符"><a href="#9-分隔符" class="headerlink" title="9. 分隔符"></a>9. 分隔符</h1><p>如果你有写分割线的习惯，可以新起一行输入三个减号-。当前后都有段落时，请空出一行：</p>
<pre><code>前面的段落

---

后面的段落
</code></pre><h1 id="10-符号转义"><a href="#10-符号转义" class="headerlink" title="10. 符号转义"></a>10. 符号转义</h1><p>如果你的描述中需要用到 markdown 的符号，比如 <em> # * 等，但又不想它被转义，这时候可以在这些符号前加反斜杠，如 \</em> # * 进行避免。  </p>
<pre><code>\_不想这里的文本变斜体\_
\*\*不想这里的文本被加粗\*\*
</code></pre><h1 id="11-表格"><a href="#11-表格" class="headerlink" title="11. 表格"></a>11. 表格</h1><h5 id="1-用法：-13"><a href="#1-用法：-13" class="headerlink" title="1) 用法："></a>1) 用法：</h5><pre><code>abc | def | kdka
--- | --- | ----
ld  | dk  | dk
</code></pre><h5 id="2-效果：-13"><a href="#2-效果：-13" class="headerlink" title="2) 效果："></a>2) 效果：</h5><table>
<thead>
<tr>
<th>abc</th>
<th>def</th>
<th>kdka</th>
</tr>
</thead>
<tbody>
<tr>
<td>ld</td>
<td>dk</td>
<td>dk</td>
</tr>
</tbody>
</table>
<h1 id="12-复杂表格"><a href="#12-复杂表格" class="headerlink" title="12. 复杂表格"></a>12. 复杂表格</h1><h3 id="12-1-在Excel中填写表格"><a href="#12-1-在Excel中填写表格" class="headerlink" title="12.1 在Excel中填写表格"></a>12.1 在Excel中填写表格</h3><p>在 Excel 中正常填写你的表格内容，之后在标题行下插入一行，要居中的填入 :-:，要右对齐的填-:，其它全部填上-。</p>
<p><img src="http://7xlpfl.com1.z0.glb.clouddn.com/%E5%9C%A8Excel%E4%B8%AD%E5%A1%AB%E5%86%99%E8%A1%A8%E6%A0%BC.png" alt=""></p>
<h3 id="12-2-生成表格"><a href="#12-2-生成表格" class="headerlink" title="12.2 生成表格"></a>12.2 生成表格</h3><h5 id="复制、粘贴表格："><a href="#复制、粘贴表格：" class="headerlink" title="复制、粘贴表格："></a>复制、粘贴表格：</h5><p>选中表格，复制，然后粘贴到 Markdown 编辑器中</p>
<h5 id="用-替换tab："><a href="#用-替换tab：" class="headerlink" title="用|替换tab："></a>用|替换tab：</h5><p>复制出来的 Excel 默认以tab作为单元格分隔符，而 Markdown 则以|为分隔符。顺理成章，当我们使用 | 对原tab分隔符进行替换后，即可生成 Markdown 化的表格。</p>
<table>
<thead>
<tr>
<th style="text-align:center">-</th>
<th>左对齐</th>
<th style="text-align:center">居中对齐</th>
<th style="text-align:right">右对齐</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">1</td>
<td>Left</td>
<td style="text-align:center">Center</td>
<td style="text-align:right">Right</td>
</tr>
<tr>
<td style="text-align:center">2</td>
<td>Left</td>
<td style="text-align:center">Center</td>
<td style="text-align:right">Right</td>
</tr>
<tr>
<td style="text-align:center">3</td>
<td>Left</td>
<td style="text-align:center">Center</td>
<td style="text-align:right">Right</td>
</tr>
</tbody>
</table>
<h3 id="12-3-在线生成Markdown表格"><a href="#12-3-在线生成Markdown表格" class="headerlink" title="12.3 在线生成Markdown表格"></a>12.3 在线生成Markdown表格</h3><p><a href="http://www.tablesgenerator.com/markdown_tables" target="_blank" rel="external">http://www.tablesgenerator.com/markdown_tables</a></p>
<h3 id="12-4-复杂表格生成办法"><a href="#12-4-复杂表格生成办法" class="headerlink" title="12.4 复杂表格生成办法"></a>12.4 复杂表格生成办法</h3><blockquote>
<p>我们仍然建议使用其他的方式替代复杂的表格，甚至尽量少用表格。</p>
</blockquote>
<p>在你本地或者远程的HTML编辑器上生成复杂表格，然后粘贴表格的HTML代码到编辑区即可。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[RecyclerView学习笔记1_入门]]></title>
      <url>http://yoursite.com/2016/04/19/15_Android/1510_View/RecyclerView/RecyclerView%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B01_%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<h1 id="一、-前言"><a href="#一、-前言" class="headerlink" title="一、 前言"></a>一、 前言</h1><p>RecyclerView是谷歌V7包下新增的控件,用来替代ListView、GridView的使用.</p>
<a id="more"></a>
<h2 id="要点："><a href="#要点：" class="headerlink" title="要点："></a>要点：</h2><ul>
<li><p>LayoutManager：布局管理器,目前SDK中提供了三种自带的LayoutManager:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LinearLayoutManager-----类似ListView</span><br><span class="line">GridLayoutManager-----类似GridView</span><br><span class="line">StaggeredGridLayoutManager-----瀑布流</span><br></pre></td></tr></table></figure>
</li>
<li><p>ItemDecoration：Item间的分割线样式</p>
</li>
<li><p>ItemAnimator：Item增加、删除的动画</p>
</li>
<li><p>点击、长按事件：比较麻烦</p>
</li>
</ul>
<h1 id="二、开发环境"><a href="#二、开发环境" class="headerlink" title="二、开发环境"></a>二、开发环境</h1><ul>
<li>IDE: Android Studio 2.0 Beta 6</li>
<li>SDK: Android 23</li>
</ul>
<h1 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h1><h2 id="配置：build-gradle"><a href="#配置：build-gradle" class="headerlink" title="配置：build.gradle"></a>配置：build.gradle</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    ...</span><br><span class="line">    compile <span class="string">'com.android.support:recyclerview-v7:23.1.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="主布局文件：activity-main-xml"><a href="#主布局文件：activity-main-xml" class="headerlink" title="主布局文件：activity_main.xml"></a>主布局文件：activity_main.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span><br><span class="line">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></span><br><span class="line">    <span class="attr">tools:context</span>=<span class="string">"com.sh.recyclerviewstudy1.MainActivity"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span><br><span class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/rv_book"</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v7.widget.RecyclerView</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="子布局文件：rv-item-book-xml"><a href="#子布局文件：rv-item-book-xml" class="headerlink" title="子布局文件：rv_item_book.xml"></a>子布局文件：rv_item_book.xml</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span><br><span class="line">    <span class="attr">android:padding</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></span><br><span class="line">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span><br><span class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/tv_book"</span></span><br><span class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        <span class="attr">android:textSize</span>=<span class="string">"16sp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="ViewHolder文件：BookViewHolder"><a href="#ViewHolder文件：BookViewHolder" class="headerlink" title="ViewHolder文件：BookViewHolder"></a>ViewHolder文件：BookViewHolder</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> TextView tvBook;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BookViewHolder</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(view);</span><br><span class="line">        tvBook = (TextView) view.findViewById(R.id.tv_book);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="适配器：BookRecyclerViewAdapter"><a href="#适配器：BookRecyclerViewAdapter" class="headerlink" title="适配器：BookRecyclerViewAdapter"></a>适配器：BookRecyclerViewAdapter</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BookRecyclerViewAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">BookViewHolder</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LayoutInflater mLayoutInflater;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> String[] mBooks;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BookRecyclerViewAdapter</span><span class="params">(Context context, String[] mBooks)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mBooks = mBooks;</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        mLayoutInflater = LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> BookViewHolder <span class="title">onCreateViewHolder</span><span class="params">(ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 创建一个View</span></span><br><span class="line">        View view = mLayoutInflater.inflate(R.layout.rv_item_book, parent, <span class="keyword">false</span>);</span><br><span class="line">        <span class="comment">// 创建一个ViewHolder</span></span><br><span class="line">        BookViewHolder bookViewHolder = <span class="keyword">new</span> BookViewHolder(view);</span><br><span class="line">        <span class="keyword">return</span> bookViewHolder;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(BookViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 绑定数据到ViewHolder上</span></span><br><span class="line">        holder.tvBook.setText(mBooks[position]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// item数量</span></span><br><span class="line">        <span class="keyword">return</span> mBooks.length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="主界面：MainActivity"><a href="#主界面：MainActivity" class="headerlink" title="主界面：MainActivity"></a>主界面：MainActivity</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RecyclerView rvBook;</span><br><span class="line">    <span class="keyword">private</span> String[] mBooks = &#123;<span class="string">"认知盈余"</span>, <span class="string">"和喜欢的一切在一起"</span>, <span class="string">"从0到1"</span>, <span class="string">"从你的全世界路过"</span>, <span class="string">"打工旅行"</span>, <span class="string">"番茄工作法图解"</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        rvBook = (RecyclerView) findViewById(R.id.rv_book);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1\. 这里用线性显示,类似于ListView</span></span><br><span class="line">        rvBook.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2\. 这里用线性宫格显示,类似于GridView</span></span><br><span class="line"><span class="comment">//        rvBook.setLayoutManager(new GridLayoutManager(this, 2));</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3\. 这里用线性宫格显示,类似于瀑布流</span></span><br><span class="line"><span class="comment">//        rvBook.setLayoutManager(new StaggeredGridLayoutManager(2, OrientationHelper.VERTICAL));</span></span><br><span class="line"></span><br><span class="line">        rvBook.setAdapter(<span class="keyword">new</span> BookRecyclerViewAdapter(MainActivity.<span class="keyword">this</span>, mBooks));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="四、总结"><a href="#四、总结" class="headerlink" title="四、总结"></a>四、总结</h1><p>RecyclerView的另一个特点是标准化了 ViewHolder，编写Adapter面向的是ViewHolder而不在是View了，复用的逻辑被封装了， 写起来更加简单。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hexo入门]]></title>
      <url>http://yoursite.com/2016/04/19/30_%E5%8D%9A%E5%AE%A2/3005_Hexo/Hexo%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<a id="more"></a>
<h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><h2 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h2 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h2 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h2 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>http://yoursite.com/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://yoursite.com/about/index.html</url>
      <content type="html"><![CDATA[<p>大家好，我是SherlockShi，欢迎来到我的个人技术博客。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>http://yoursite.com/tags/index%E5%89%AF%E6%9C%AC.html</url>
      <content type="html"><![CDATA[<p>type: “tags”<br>noDate: true</p>
<h2 id="comments-false"><a href="#comments-false" class="headerlink" title="comments: false"></a>comments: false</h2>]]></content>
    </entry>
    
    <entry>
      <title></title>
      <url>http://yoursite.com/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
  
</search>
